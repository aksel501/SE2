@model MUE.Models.POST

@{
    ViewBag.Title = "Create";
}
<br />
<br />
@*<h2>Create</h2>*@

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>POST</h4>
        <hr />

        @Html.HiddenFor(model=>model.DATETIMEPOSTED)



        @*
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
        </div>

    </div>
        *@
        <div class="form-group">
            @Html.LabelFor(model => model.USERID, "USERID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("USERID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.USERID, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.DATETIMEPOSTED, htmlAttributes: new { @class = "control-label col-md-2" })
 
        <div class="editor-field">
            @Html.EditorFor(model => model.DATETIMEPOSTED, new { htmlAttributes = new { @class = "form-control", Value = System.DateTime.Now } })
            @Html.ValidationMessageFor(model => model.DATETIMEPOSTED)
        </div>
           </div>
     @*  <div class="form-group">
            @Html.LabelFor(model => model.DATETIMEPOSTED, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @* @Html.TextBoxFor(model => model.DATETIMEPOSTED, new { Value = Model.DATETIMEPOSTED.ToString("MM-dd-yyyy") });
              @Html.EditorFor(model => model.DATETIMEPOSTED, new { htmlAttributes = new { @class = "form-control" } })*@
         @*   @Html.TextBox("DATETIMEPOSTED", Model.DATETIMEPOSTED != null ? Model.DATETIMEPOSTED : DateTime.Now)
          @Html.ValidationMessageFor(model => model.DATETIMEPOSTED, "", new { @class = "text-danger" })
            </div>
        </div>

        *@
        <div class="form-group">
            @Html.LabelFor(model => model.TITLE, "Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TITLE, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TITLE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SUBJECT, "Post Body",htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.SUBJECT,  new { @class = "form-control", @rows = 10, @cols=30 })
                @Html.ValidationMessageFor(model => model.SUBJECT, "", new { @class = "text-danger" })
            </div>
        </div>

       

       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
